Here you will find data for tracks A and B in a reasonably simple
format, as well as a parser (written in Python) that converts these
files into C code containing the track data.

Included files:
  tracka, trackb                human-editable track data
  parse_track                   parser script for the above data
  track_data.c, track_data.h    code generated by parse_track
  track_node.h                  definitions for the above code
  legacy/*                      old track data and migration script

The point of providing this to you is to save you time (especially
the menial task of recording the layout of each track).  You are
encouraged to use as much or as little as you wish, and you will
likely want to modify it to better suit your purposes.

It is natural to want to store some mutable state in the track_node
struct.  For this reason, the definition of the track_node struct
(and some supporting definitions) are in the file "track_node.h",
which may be safely edited as it is NOT generated code.  If you want
to modify any of the generated code, you should make the desired
changes in parse_track instead.

Since global variables (as opposed to global constants) are outside
of the scope of the kernel requirements for this course, this is
also why we use an initialization function.  So, a task that wants
to use the track data needs some code that looks like:

  void task_main() {
    track_node track[TRACK_MAX]; // This is guaranteed to be big enough.
    init_tracka(track);
    ...
  }

Nodes in the graph correspond to landmarks (sensors, switches, or
dead ends) on the track.  The edges are the pieces of track running
between these landmarks.  In fact, each landmark has TWO nodes in
the graph, one for each direction of travel.  The terminology is
as follows:

   sensor   -- same type in both directions -- named after sensor id
   switch   -- branch (BR) / merge (MR)     -- named after switch id
   dead end -- entrance (EN) / exit (EX)    -- named arbitrarily

For more information, it is probably best to read the provided
files themselves.

WARNING: These are still the old measurements, and some of them
are quite wrong (but surprisingly useful nonetheless).

Send any complaints, suggestions, or improvements to the course
email account, which may or may not be cs452@cgl.uwaterloo.ca,
depending on how far into the future this document survives.

Simon Parent
Spring 2011
